name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_KEY: ${{ secrets.EC2_KEY }}

    steps:
      # Step 1: Checkout the code from GitHub
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Debug repository structure
      - name: Debug Repository Structure
        run: |
          pwd
          ls -la
          find . -type d

      # Step 3: Log into Docker Hub
      - name: Log in to Docker Hub
        run: echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

      # Step 4: Build and Push Docker Images to Docker Hub
      - name: Build and Push Docker Images
        run: |
          SERVICES="zyra-api-gateway zyra-auth-service zyra-client-service zyra-admin-service zyra-msg-service zyra-vendor-service"
          echo "Listing root directory:"
          ls -l
          for SERVICE in $SERVICES; do
            echo "Building $DOCKERHUB_USERNAME/zyra-moments-$SERVICE"
            if [ -d "$SERVICE" ]; then
              cd $SERVICE
              docker build -t $DOCKERHUB_USERNAME/zyra-moments-$SERVICE:latest .
              docker push $DOCKERHUB_USERNAME/zyra-moments-$SERVICE:latest
              cd ..
            else
              echo "Directory $SERVICE not found"
              exit 1
            fi
          done

      # Step 5: Deploy to EC2 via SSH using docker-compose
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Debug: Verify SSH connection and environment
            whoami
            echo "Current directory: $(pwd)"
            docker --version
            docker compose version

            # Log in to Docker Hub
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin || { echo "Docker login failed"; exit 1; }

            # Navigate to the directory where docker-compose.yml is located
            cd /home/ubuntu || { echo "Directory /home/ubuntu not found"; exit 1; }

            # Pull the latest images for all services
            docker compose pull || { echo "Docker compose pull failed"; exit 1; }

            # Start the new containers
            docker compose up -d || { echo "Docker compose up failed"; exit 1; }